fullnameOverride: prometheus

alertmanager:
  fullnameOverride: alertmanager
  enabled: true
  ingress:
    enabled: false
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: local-path
          resources:
            requests:
              storage: 2Gi
          accessModes:
            - ReadWriteOnce

grafana:
  fullnameOverride: grafana
  enabled: true
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: utc
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts: []
    path: /
  serviceMonitor:
    enabled: true
  admin:
    existingSecret: grafana-credentials
    userKey: grafana-user
    passwordKey: grafana-password

kubeApiServer:
  enabled: true

kubelet:
  enabled: true
  #serviceMonitor:
    #metricRelabelings:
      #- action: replace
        #sourceLabels:
          #- node
        #targetLabel: instance

kubeControllerManager:
  enabled: true
  #endpoints: # ips of servers if your kube controller manager is not deployed as a pod, specify IPs
    #- X.X.X.X

coreDns:
  enabled: true

kubeDns:
  enabled: false

kubeEtcd:
  enabled: true
  #endpoints: # ips of servers if your etcd is not deployed as a pod, specify IPs
    #- X.X.X.X

kubeScheduler:
  enabled: true
  endpoints: # ips of servers if your kube scheduler is not deployed as a pod, specify IPs
    #- X.X.X.X

kubeProxy:
  enabled: true
  endpoints: # ips of servers if your kube proxy is not deployed as a pod, specify IPs
    #- X.X.X.X

kubeStateMetrics:
  enabled: true

kube-state-metrics:
  fullnameOverride: kube-state-metrics
  selfMonitor:
    enabled: true
  prometheus:
    monitor:
      enabled: true
      #relabelings:
        #- action: replace
          #regex: (.*)
          #replacement: $1
          #sourceLabels:
            #- __meta_kubernetes_pod_node_name
          #targetLabel: kubernetes_node

nodeExporter:
  enabled: true
  #serviceMonitor:
    #relabelings:
      #- action: replace
        #regex: (.*)
        #replacement: $1
        #sourceLabels:
          #- __meta_kubernetes_pod_node_name
        #targetLabel: kubernetes_node

prometheus-node-exporter:
  fullnameOverride: node-exporter
  #podLabels:
    #jobLabel: node-exporter
  #extraArgs:
    #- --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    #- --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  #service:
    #portName: http-metrics
  prometheus:
    monitor:
      enabled: true
      #relabelings:
        #- action: replace
          #regex: (.*)
          #replacement: $1
          #sourceLabels:
            #- __meta_kubernetes_pod_node_name
          #targetLabel: kubernetes_node
  #resources:
    #requests:
      #memory: 512Mi
      #cpu: 250m
    #limits:
      #memory: 2048Mi

prometheusOperator:
  enabled: true
  #prometheusConfigReloader:
    #resources:
      #requests:
        #cpu: 200m
        #memory: 50Mi
      #limits:
        #memory: 100Mi

prometheus:
  enabled: true
  prometheusSpec:
    replicas: 1
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    retention: 2d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: local-path
          resources:
            requests:
              storage: 10Gi
          accessModes:
            - ReadWriteOnce

thanosRuler:
  enabled: false
